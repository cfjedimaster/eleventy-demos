<h1>Post</h1>

<p><a href="http://devilm.com/">Matt Liotta</a> and Barney Boisvert raised an interesting issue today on <a href="http://www.cfczone.org/listserv.cfm">cfcdev</a>. We all know, or should know, that cfc methods (and tag based udfs) take an OUTPUT attribute. This supposedly does two things: If set to true, it allows any and all output to be generated by the UDF. If set to false, it acts as if a cfsilent tag surrounded the function. In general, you should almost always use output=&quot;false&quot;.</p>
<p>However, something odd happens if you leave off the output attribute. It is supposed to default to true, but that is not the case. Consider the following code:</p>
<p>&lt;cfset x = 1&gt;<br>
&lt;cffunction name=&quot;test&quot;&gt;<br>
hi ray #x#<br>
&lt;/cffunction&gt;<br>
<br>
&lt;cffunction name=&quot;test2&quot; output=&quot;true&quot;&gt;<br>
hi ray #x#<br>
&lt;/cffunction&gt;<br>
<br>
&lt;cfset test()&gt;<br>
&lt;cfset test2()&gt;<br></p>
<p>When test() is run, the string inside the function is output, but #x# is NOT evaluated. It acts just like normal text in a CFML page. When test2() is run, the value of x <i>is</i> evaluated. It acts as if the text were surrounded by cfoutput tags. This could lead to confusion as you may actually want to show #foo# or output an internal anchor link.</p>
}