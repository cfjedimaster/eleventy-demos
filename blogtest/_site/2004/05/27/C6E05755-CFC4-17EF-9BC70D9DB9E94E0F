<h1>Post</h1>

<p>One common things folks may do when using try/catch in CFML is to simply cfdump the CFCATCH object. I know that I, probably like most folks, assumed that the CFCATCH variable was a structure. It looks like a structure (with values like cfcatch.tagcontext) and most x.y things in CF <i>are</i> structures, so it was probably a safe assumption. However, there are times when dumping cfcatch will not result in a nice little struct. Instead you get something like this:</p>
<img src="https://static.raymondcamden.com/images/shot.gif">
<p>This was generated from the following code:</p>
<div class="code"><FONT COLOR=MAROON>&lt;cftry&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;<FONT COLOR=MAROON>&lt;cfset x = structNew()&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;<FONT COLOR=MAROON>&lt;cfoutput&gt;</FONT>#x.y#<FONT COLOR=MAROON>&lt;/cfoutput&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;<FONT COLOR=MAROON>&lt;cfcatch&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT COLOR=MAROON>&lt;cfdump var=<FONT COLOR=BLUE>"#cfcatch#"</FONT>&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;<FONT COLOR=MAROON>&lt;/cfcatch&gt;</FONT><br>
<FONT COLOR=MAROON>&lt;/cftry&gt;</FONT></div>
<p>What is interesting is that it seems to be only a specific type of error: coldfusion.runtime.UndefinedElementException. If you change the code above, let's say to foo() (a udf that does not exist), the dump works correctly.</p>
<p>So what to do? You could switch to a more manual approach:</p>
<div class="code"><FONT COLOR=MAROON>&lt;cfoutput&gt;</FONT><br>
<FONT COLOR=TEAL>&lt;table&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;tr&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;td&gt;</FONT>Type:<FONT COLOR=TEAL>&lt;/td&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;td&gt;</FONT>#cfcatch.type#<FONT COLOR=TEAL>&lt;/td&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;/tr&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;tr&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;td&gt;</FONT>Message:<FONT COLOR=TEAL>&lt;/td&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;td&gt;</FONT>#cfcatch.message#<FONT COLOR=TEAL>&lt;/td&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;/tr&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;tr&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;td&gt;</FONT>Detail:<FONT COLOR=TEAL>&lt;/td&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;td&gt;</FONT>#cfcatch.detail#<FONT COLOR=TEAL>&lt;/td&gt;</FONT><br>
&nbsp;&nbsp;&nbsp;<FONT COLOR=TEAL>&lt;/tr&gt;</FONT><br>
<FONT COLOR=TEAL>&lt;/table&gt;</FONT><br>
<FONT COLOR=MAROON>&lt;/cfoutput&gt;</FONT></div>
<p>This works nicely, although for the original error, the detail row is blank. You could also add more detail, like the tag context, etc.</p>
<p>So, this was discussed on cf-guru quite a bit. Sean Corfield made the point that the documentation does <i>not</i> explicitly state that cfcatch is a structure. However, I think it's current behaviour would be considered a bug. I'd be willing to bet that this particular CF exception has a simple bug in it that makes it not work quite well with cfdump. Either way it is something to keep in mind.</p>
}