<h1>Post</h1>

<p>The following information was sent to me by Baz (he didn't send a last name, so for now I'm assuming he is an eccentric rock star looking to change careers and become a web developer). As you know, or may not know, CFMX7 added a cool new function called <a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000534.htm">isValid()</a>. isValid lets you do all kinds of nice checking on strings. For example:</p>
<div class="code"><FONT COLOR=MAROON>&lt;cfif not isValid(<FONT COLOR=BLUE>"email"</FONT>, form.email)&gt;</FONT><br>
  <FONT COLOR=MAROON>&lt;cfoutput&gt;</FONT>Enter a valid email address, you wanker!<FONT COLOR=MAROON>&lt;/cfoutput&gt;</FONT><br>
<FONT COLOR=MAROON>&lt;/cfif&gt;</FONT><br>
<FONT COLOR=MAROON>&lt;cfif not isValid(<FONT COLOR=BLUE>"ssn"</FONT>, form.ssn)&gt;</FONT><br>
  <FONT COLOR=MAROON>&lt;cfoutput&gt;</FONT>Yes, I know social security won't be around when<br>
you retire, but you must still enter a valid SSN!<FONT COLOR=MAROON>&lt;/cfoutput&gt;</FONT><br>
<FONT COLOR=MAROON>&lt;/cfide&gt;</FONT></div>
<p>The two examples above show logic that would have been possible only with complex regex checks in the past. As you can imagine, the style above is somewhat simpler.</p>
<p>One of the isValid checks is for integers. An integer is a positive or negative whole number. So 42 is an integer, but 3.14159. What Baz discovered, however, was that the integer check was a bit too loose. Consider these four checks:</p>
<p>isValid(&quot;Integer&quot;,&quot;500,000&quot;)<br>
isValid(&quot;Integer&quot;,&quot;500,0&quot;)<br>
isValid(&quot;Integer&quot;,&quot;$500,000&quot;)<br>
isValid(&quot;Integer&quot;,&quot;$500,000$&quot;)<br></p>
<p>Looking at the code above, I'd assume they would all return false. However - all four evaluate to true! Now - as we all know, ColdFusion is a bit loose when it comes to variables. That's part of the whole RAD aspect, and frankly I don't want to start a thread on that being good or not. That being said, I think both Baz and I agree that the assumption is that isValid would be more strict. It is certainly strict when doing a numeric check.</p>
<p>So if you do want to verify that a value is a proper integer, what do you do? I suggested a regex check:</p>
<p>isValid(&quot;regex&quot;, &quot;101&quot;, &quot;^-{0,1}[1-9]+[\d]*&quot;)</p>
<p>while Baz suggested a two-thronged approach:</p>
<p>isNumeric(OrderID) AND isValid(&quot;Integer&quot;,OrderID)</p>
<p>Personally, I like mine better, but who doesn't like their own code. Certainly the second one is probably a bit easier to read.</p>
<p>p.s. I've already logged a bug on this.</p>
}