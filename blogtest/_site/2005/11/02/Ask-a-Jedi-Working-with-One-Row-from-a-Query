<h1>Post</h1>

<p>A reader asks:</p>
<blockquote>
How do you access the entire row when looping over a query?  When I pass the query name to a DAO object that loads a bean from a single record I always get the 1st record. Any ideas are greatly appreciated.
</blockquote>
<p>There is no way to deal with just one row from a query, however, you can easily access any column and any row from a query using array notation. So to get the 5th row, column name, from query data, you could use:</p>
<p>&lt;cfset value = data.name[5]&gt;</p>
<p>If you leave off the row number, ColdFusion will assume you mean row 1, unless you are actively looping over a query in a cfloop or cfoutput.</p>
<p>While there is no native way to deal with just a &quot;row&quot;, you can use a UDF - <a href="http://www.cflib.org/udf.cfm?ID=358">QueryRowToStruct</a>. This UDF will take a row from a query and convert it to a structure. Here is an example:</p>
<code>
&lt;cfset data = queryNew("id,name,aGe")&gt;
<p>&lt;cfloop index=&quot;x&quot; from=&quot;1&quot; to=&quot;10&quot;&gt;
&lt;cfset queryAddRow(data)&gt;
&lt;cfset querySetCell(data,&quot;id&quot;,x)&gt;
&lt;cfset querySetCell(data,&quot;name&quot;,&quot;User #x#&quot;)&gt;
&lt;cfset querySetCell(data,&quot;aGe&quot;,randRange(20,90))&gt;
&lt;/cfloop&gt;</p>
<p>&lt;cfscript&gt;
/**</p>
<ul>
<li>Makes a row of a query into a structure.</li>
<li></li>
<li>@param query 	 The query to work with.</li>
<li>@param row 	 Row number to check. Defaults to row 1.</li>
<li>@return Returns a structure.</li>
<li>@author Nathan Dintenfass (nathan@changemedia.com)</li>
<li>@version 1, December 11, 2001
*/
function queryRowToStruct(query){
//by default, do this to the first row of the query
var row = 1;
//a var for looping
var ii = 1;
//the cols to loop over
var cols = listToArray(query.columnList);
//the struct to return
var stReturn = structnew();
//if there is a second argument, use that for the row number
if(arrayLen(arguments) GT 1)
row = arguments[2];
//loop over the cols and build the struct from the query row
for(ii = 1; ii lte arraylen(cols); ii = ii + 1){
stReturn[cols[ii]] = query[cols[ii]][row];
}		
//return the struct
return stReturn;
}
&lt;/cfscript&gt;</li>
</ul>
<p>&lt;cfset row5 = queryRowToStruct(data,5)&gt;
&lt;cfdump var=&quot;#row5#&quot; label=&quot;Fifth Row&quot;&gt;
</code></p>
}