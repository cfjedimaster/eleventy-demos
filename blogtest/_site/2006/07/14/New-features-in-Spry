<h1>Post</h1>

<p>Here is a quick look at some new features in Spry. I modified my older <a href="http://www.cflib.org/spry/index.cfm">CFLib Spry</a> demo to show off a few new things. You can find the new demo here:</p>
<blockquote>
<a href="http://www.cflib.org/spry/index2.cfm">http://www.cflib.org/spry/index2.cfm</a>
</blockquote>
<p>So what is new? First off, notice the status messages as the page loads and you change categories. If you view source on the <a href="http://www.cflib.org/spry/index2.cfm">older demo</a>, you will see some fancy JavaScript being used to handle that. How is it done now? By just using the spry:state block. Consider this code block:</p>
<!--more-->
<code>
&lt;div id="Libraries_DIV" spry:region="dsLibraries" class="box"&gt;
	&lt;h2&gt;Libraries&lt;/h2&gt;
<pre><code>&amp;lt;select id=&quot;Libraries_Table&quot; onchange=&quot;dsLibraries.setCurrentRow(this.selectedIndex);document.filterForm.filter.value='';&quot;&amp;gt;
	&amp;lt;option spry:repeat=&quot;dsLibraries&quot; id=&quot;{ID}&quot;&amp;gt;{NAME}&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;

&amp;lt;div class=&quot;loading&quot; spry:state=&quot;loading&quot;&amp;gt;Loading ...&amp;lt;/div&amp;gt;
</code></pre>
<p>&lt;/div&gt;
</code></p>
<p>By using spry:state=&quot;loading&quot; on the region, I don't have to worry about showing or hiding the block. It is done for me with Spry. Spry supports the following states: loading, error, ready. You can also build in your own custom states as well. So for example, maybe you have a call that performs a search for records. You could create a custom state for the state where no records were returned. You can also bind a state to multiple datasets. That way you could use one error handler for all your dynamic regions.</p>
<p>The second new feature is simple but powerful. Consider this old code to handle even/odd states in the table:</p>
<code>
&lt;tr spry:if="({ds_RowNumber} % 2) == 0" class="even" onclick="dsUDFs.setCurrentRow('{ds_RowID}');" &gt;
	&lt;td&gt;{NAME}&lt;/td&gt;
	&lt;td&gt;{CATNAME}&lt;/td&gt;
	&lt;td&gt;{LASTUPDATED}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr spry:if="({ds_RowNumber} % 2) != 0" class="odd" onclick="dsUDFs.setCurrentRow('{ds_RowID}');" &gt;
	&lt;td&gt;{NAME}&lt;/td&gt;
	&lt;td&gt;{CATNAME}&lt;/td&gt;
	&lt;td&gt;{LASTUPDATED}&lt;/td&gt;
&lt;/tr&gt;
</code>
<p>While this worked, it was a bit of a pain to update column names since you needed to do it in two places. Now there is a way to simply get the even/odd state of the current row: {ds_EvenOddRow}. This is the new version of the above code:</p>
<code>
&lt;tr class="{ds_EvenOddRow}" onclick="dsUDFs.setCurrentRow('{ds_RowID}');" &gt;
	&lt;td&gt;{NAME}&lt;/td&gt;
	&lt;td&gt;{CATNAME}&lt;/td&gt;
	&lt;td&gt;{LASTUPDATED}&lt;/td&gt;
&lt;/tr&gt;
</code>
<p>The last new feature I'm going to demonstrate is the debugging ability. I've added code to my demo such that if url.debug exists, I output this JavaScript line:</p>
<code>
Spry.Data.Region.debug = true;
</code>
<p>To see this in action, visit this link:</p>
<blockquote>
<a href="http://www.cflib.org/spry/index2.cfm?debug=dharma">http://www.cflib.org/spry/index2.cfm?debug=dharma</a>
</blockquote>}