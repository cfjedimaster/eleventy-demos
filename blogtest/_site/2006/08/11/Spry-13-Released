<h1>Post</h1>

<p>The title says it all. You can now get <a href="http://labs.adobe.com/technologies/spry/">Spry 1.3</a> from the Adobe Labs site. I'll blog a bit more about it later in the day when I get a chance to play with it. One main change seems to be the effects library. Check the demo <a href="http://labs.adobe.com/technologies/spry/demos/effects/#">here</a>.</p>
<p>Here is the changelog from the zip:</p>
<!--more-->
<ul>
<li>Introduced Spry Effects, the 3rd portion of the Spry Framework.
<ul>
<li>Provided SpryEffects.js in the includes folder.</li>
<li>Provided Effects sample files in Effect folder.   </li>
<li><a href="articles/effects_model/index.htm">Effects Overview</a> doc posted online.</li>
<li><a href="articles/effects_coding/index.html">Effects Coding</a><strong> </strong>doc posted online.  </li>
<li><a href="articles/effects_api/index.html">Effects API </a></li>
</ul>
</li>
            <li>Removed documentation from the zip. All docs will be available online on Labs site as HTML and PDF. </li>
            <li>Changes to SpryData.js:
            	<ul>
            		<li>Fix the loop in Spry.Utils.createXMLHttpRequest() so that it doesn't skip the next progID in the array after removing a non-existent one.</li>
            		<li>Make sure all initialization of the Spry.Utils.loadURL.Request headers property uses an object so that it works properly when used with Prototype 1.5 rc0.   </li>
            		<li>Fix Spry.Utils.Notifier.prototype.notifyObservers() so that it uses a normal for loop instead of a &quot;for in&quot; loop. </li>
<pre><code>        		&lt;li&gt;Added support for {ds_UnfilteredRowCount}. &lt;/li&gt;
        	&lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;Updates to SpryAccordion.js
          &lt;ul&gt;
            &lt;li&gt;Added panel opening function: openNextPanel(), openPreviousPanel(), openFirstPanel, and openLastPanel()&lt;/li&gt;
            &lt;li&gt;Added current panel accessor: getCurrentPanel() - return the panel, getCurrentPanelIndex() - returns the index of the current panel in the getPanels() array.&lt;/li&gt;
            &lt;li&gt;Added addNewPanel(tab, content) function to dynamically add new panels in Javascript. Panels get added after the current panel.  &lt;/li&gt;

      	  &lt;/ul&gt;
        &lt;/li&gt;
    	&lt;li&gt;Gallery Demo updated to use new SpryEffects.js. &lt;/li&gt;
	  &lt;/ul&gt;</code></pre>
}