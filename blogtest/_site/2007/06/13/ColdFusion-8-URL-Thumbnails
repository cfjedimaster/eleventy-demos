<h1>Post</h1>

<p>A reader asked me this morning if ColdFusion 8 can create images from URLs. This is often used to provide a snap shot of a remote site. Turns out this is relatively easy. Damon Cooper of Adobe showed an example of this a few weeks ago. It takes all of two tags:</p>
<more />
<code>
&lt;cfdocument src="http://www.raymondcamden.com" name="pdfdata" format="pdf" /&gt;
&lt;cfpdf source="pdfdata" pages="1" action="thumbnail" destination="." format="jpg" overwrite="true" resolution="high" scale="25"&gt;
</code>
<p>The first line simply uses cfdocument with the src attribute. I point to a URL (in this case, my blog) and store the result in a PDF variable.</p>
<p>Next I use the cfpdf tag to create a thumbnail. I specify the JPG format, use a high resolution, and set a scale to 25% just for the heck of it. Also note I only do page 1. By default the cfpdf/action=&quot;thumbnail&quot; tag will create a thumbnail for each page of the PDF, but all we really want is the first page.</p>
<p>That's it. Done. Complete. Simple as pie. But of course I had to go a bit crazy and make a UDF out of it. The code below allows you to pass a URL (and an optional scale). It will then handle making the image, reading it into a CF8 Image object, deleting the file, and returning the object. You can then save it, or do whatever. For my tests, I did:</p>
<code>
&lt;cfset myimage = getThumbnail("http://www.coldfusionjedi.com",30)&gt;
&lt;cfimage action="writeToBrowser" source="#myimage#"&gt;
</code>
<p>The &quot;writeToBrowser&quot; action lets me test without actually saving a file, but I believe it doesn't work in IE. (Not that I care.) Enjoy, and let me know how it works for you. I'll probably add options to let you specify an image type as well.</p>
<p>The image quality is pretty good I think. It is <b>not</b> the same as what you see from Firefox, but for a thumbnail, I think it works ok:</p>
<img src="https://static.raymondcamden.com/images/cfjedi/geturl.png">
<code>
&lt;cffunction name="getThumbnail" returnType="any" output="false"&gt;
	&lt;cfargument name="url" type="string" required="true"&gt;
	&lt;cfargument name="scale" type="numeric" required="false" default="25"&gt;
<pre><code>&amp;lt;cfset var pdfdata = &quot;&quot;&amp;gt;
&amp;lt;cfset var prefix = replace(createUUID(),&quot;-&quot;,&quot;_&quot;,&quot;all&quot;)&amp;gt;
&amp;lt;cfset var myimage = &quot;&quot;&amp;gt;

&amp;lt;!--- make the pdf ---&amp;gt;
&amp;lt;cfdocument src=&quot;#arguments.url#&quot; name=&quot;pdfdata&quot; format=&quot;pdf&quot; /&amp;gt;

&amp;lt;!--- write out the image ---&amp;gt;
&amp;lt;cfpdf source=&quot;pdfdata&quot; pages=&quot;1&quot; action=&quot;thumbnail&quot; destination=&quot;.&quot; format=&quot;jpg&quot; overwrite=&quot;true&quot; 
	   resolution=&quot;high&quot; scale=&quot;#arguments.scale#&quot; imagePrefix=&quot;#prefix#&quot;&amp;gt;

&amp;lt;!--- read it in ---&amp;gt;
&amp;lt;cfset myimage = imageNew(expandPath('./#prefix#_page_1.jpg'))&amp;gt;

&amp;lt;!--- clean it up ---&amp;gt;
&amp;lt;cffile action=&quot;delete&quot; file=&quot;#expandPath('./#prefix#_page_1.jpg')#&quot;&amp;gt;
&amp;lt;cfreturn myimage&amp;gt;
</code></pre>
<p>&lt;/cffunction&gt;
</code></p>
}