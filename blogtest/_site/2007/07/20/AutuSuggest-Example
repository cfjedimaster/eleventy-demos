<h1>Post</h1>

<p>I've added autusuggest to <a href="http://www.coldfusionbloggers.org">ColdFusionBloggers.org</a> and thought I'd talk a bit about how I did it (and about the problems I ran into).</p>
<p>First off - using autosuggest is extremely simple. All you have to do is take a standard input tag and switch it to a cfinput tag instead. Then just add the autosuggest attribute and your done. Thats it. Well, ok, you have to hook up the autusuggest to either a static list of suggestions, or to a dynamic data source.</p>
<p>For <a href="http://www.coldfusionbloggers.org">ColdFusionBloggers.org</a> I decided the autusuggest would be based on previous searches. I added a logSearch() method to my entries CFC. This logged the search term and the time. I then added a method to return results based on what you type in the search box:</p>
<code>
&lt;cffunction name="getSearchHelp" access="remote" returnType="array" output="false"&gt;
	&lt;cfargument name="term" type="string" required="true"&gt;
<pre><code>&amp;lt;cfquery name=&quot;q&quot; datasource=&quot;#variables.dsn#&quot;&amp;gt;
select	distinct searchterm
from	search_log
where	searchterm like &amp;lt;cfqueryparam cfsqltype=&quot;cf_sql_varchar&quot; value=&quot;#left(arguments.term,255)#%&quot;&amp;gt;
limit 0,10
&amp;lt;/cfquery&amp;gt;

&amp;lt;cfreturn listToArray(valueList(q.searchTerm))&amp;gt;
</code></pre>
<p>&lt;/cffunction&gt;
</code></p>
<p>Notice I used #term#% for my search, not %#term#%. Why? Remember that autusuggest is based on what you type. If you type &quot;R&quot;, you should see suggestions that start with R.</p>
<p>Then I ran into my first problem. Notice the datasource is variables.dsn. My Application.cfc file had created and initialized an instance of entries.cfc. Guess what happened when I hooked up ColdFusion directly to the CFC? Because I was accessing the CFC directly, variables.dsn wasn't set properly. I fixed it by changing to application.dsn, which worked, but I wanted a nicer solution.</p>
<p>The <b>cool</b> thing about binds in ColdFusion 8 is that you can link to CFCs, JavaScript functions, and random URLs. So my cfinput which had been using a CFC:</p>
<code>
&lt;cfinput name="search_query" autosuggest="cfc:components.entries.getSearchHelp({cfautosuggestvalue})" maxResultsDisplay="10"&gt;
</code>
<p>Was switched to this version:</p>
<code>
&lt;cfinput name="search_query" autosuggest="url:searchhelpproxy.cfm?term={cfautosuggestvalue}" maxResultsDisplay="10" showAutoSuggestLoadingIcon="false" size="10" /&gt;	
</code>
<p>I then added searchhelpproxy.cfm:</p>
<code>
&lt;cfif structKeyExists(url, "term") and len(trim(url.term))&gt;
	&lt;cfinvoke component="#application.entries#" method="getSearchHelp" term="#url.term#" returnVariable="result"&gt;
	&lt;cfoutput&gt;#serializeJSON(result)#&lt;/cfoutput&gt;&lt;cfabort&gt;
&lt;/cfif&gt;
</code>
<p>This file simply invokes the method I built but uses the Application scoped CFC instead. Notice that I have to format the result into JSON. Also note that Ben has <a href="http://www.forta.com/blog/index.cfm/2007/7/17/Last-Minute-ColdFusion-Ajax-Enhancements">blogged</a> about some nice modifications made to autosuggest and cfselect bound controls.</p>
<p>If I have to do this again, I'll most likely create a more generic file that can handle different operations.</p>
<p>One last issue. I noticed that when I used the autusuggest control, it broke my layout a bit. I've pinged Adobe about this, but for now I've tried to make it work better by adding some style to my cfinput. In general I do not see a good reason why this should have <i>any</i> impact on layout, but maybe I did something wrong.</p>
<p>I've updated the code base again. You can download it on the FAQ at the site.</p>
}