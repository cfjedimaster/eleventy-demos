<h1>Post</h1>

<p>Did you know that ColdFusion 8 has a new scope? The CFTHREAD scope is a special scope that contains information about threads in the current request. Consider this simple example:</p>
<code>
&lt;cfset urls = "http://www.cnn.com,http://www.raymondcamden.com,http://www.yahoo.com"&gt;
<p>&lt;cfset counter = 0&gt;
&lt;cfloop index=&quot;u&quot; list=&quot;#urls#&quot;&gt;
&lt;cfset counter++ &gt;
&lt;cfthread theurl=&quot;#u#&quot; name=&quot;thread_#counter#&quot;&gt;
&lt;cfhttp url=&quot;#attributes.theurl#&quot;&gt;
&lt;/cfthread&gt;
&lt;/cfloop&gt;</p>
<p>&lt;cfdump var=&quot;#cfthread#&quot;&gt;
</code></p>
<p>This code block creates 3 threads, named thread_1, thread_2, and thread_3. (I don't get paid to be creative!) Each thread created will exist as a structure inside the CFTHREAD scope as demonstrated in this screen shot:</p>
<img src="https://static.raymondcamden.com/images/cfjedi/cfthread.png">
<p>You will notice that not all of my threads are finished. That is because I didn't do a join on my threads. If you look at <a href="http://paragator.riaforge.org">Paragator</a>, my ColdFusion RSS Aggregator CFC, you will see I kept a list of all threads so that I could join them. I then used Evalute to create pointers to the data. This can be done a lot easier now. So for example, to join all threads:</p>
<code>
&lt;cfthread action="join" name="#structKeyList(cfthread)#" /&gt;
</code>
<p>And to get access to a thread's data:</p>
<code>
&lt;cfdump var="#cfthread[somethreadname]#"&gt;
</code>
<p>I'll be updating Paragator a bit later in the week.</p>
}