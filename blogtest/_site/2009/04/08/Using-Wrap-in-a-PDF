<h1>Post</h1>

<p>I ran into an interesting question today on Adobe's <a href="http://forums.adobe.com/community/coldfusion">ColdFusion Forums</a>. How would one use wrapped text in a PDF generated by CFDOCUMENT?</p>
<!--more-->
<p>It was obvious that the user wasn't really aware of what wrap did. His first test was a simple check in the browser:</p>
<code>
&lt;!--- Text from Flatland, (Edwin A. Abbott 1838-1926)  ---&gt;
&lt;cfsavecontent variable="sampletext"&gt;
But now, drawing back to the edge of the table, gradually lower your eye (thus bringing yourself more and more into the condition of the inhabitants of Flatland), and you will find the penny becoming more and more oval to your view; and at last when you have placed your eye exactly on the edge of the table (so that you are, as it were, actually a Flatlander) the penny will then have ceased to appear oval at all, and will have become, so far as you can see, a straight line.
<p>The same thing would happen if you were to treat in the same way a Triangle, or Square, or any other figure cut out of pasteboard. As soon as you look at it with your eye on the edge on the table, you will find that it ceases to appear to you a figure, and that it becomes in appearance a straight line. Take for example an equilateral Triangle - who represents with us a Tradesman of the respectable class. Fig. 1 represents the Tradesman as you would see him while you were bending over him from above; figs. 2 and 3 represent the Tradesman, as you would see him if your eye were close to the level, or all but on the level of the table; and if your eye were quite on the level of the table (and that is how we see him in Flatland) you would see nothing but a straight line.
&lt;/cfsavecontent&gt;</p>
<p>&lt;cfset newText = wrap(trim(sampleText),40)&gt;</p>
<p>&lt;cfoutput&gt;
#newText#
&lt;/cfoutput&gt;
</code></p>
<p>Running this will give you one big block of text in the browser. Viewing source though shows the proper wrap. Wrap is not really meant for HTML viewing, but rather emails, or other fixed content type strings.</p>
<p>You can wrap the output in PRE tags and that will work, both in the browser and in PDF, but that gives you slightly ugly text as well. An alternative fix would be to replace the line breaks with BRs:</p>
<code>
&lt;cfset newText = replace(newText, chr(10), "&lt;br/&gt;", "all")&gt;
</code>
<p>Here is a complete template showing this in action:</p>
<code>
&lt;!--- Text from Flatland, (Edwin A. Abbott 1838-1926)  ---&gt;
&lt;cfsavecontent variable="sampletext"&gt;
But now, drawing back to the edge of the table, gradually lower your eye (thus bringing yourself more and more into the condition of the inhabitants of Flatland), and you will find the penny becoming more and more oval to your view; and at last when you have placed your eye exactly on the edge of the table (so that you are, as it were, actually a Flatlander) the penny will then have ceased to appear oval at all, and will have become, so far as you can see, a straight line.
<p>The same thing would happen if you were to treat in the same way a Triangle, or Square, or any other figure cut out of pasteboard. As soon as you look at it with your eye on the edge on the table, you will find that it ceases to appear to you a figure, and that it becomes in appearance a straight line. Take for example an equilateral Triangle - who represents with us a Tradesman of the respectable class. Fig. 1 represents the Tradesman as you would see him while you were bending over him from above; figs. 2 and 3 represent the Tradesman, as you would see him if your eye were close to the level, or all but on the level of the table; and if your eye were quite on the level of the table (and that is how we see him in Flatland) you would see nothing but a straight line.
&lt;/cfsavecontent&gt;</p>
<p>&lt;cfset newText = wrap(trim(sampleText),40)&gt;
&lt;cfset newText = replace(newText, chr(10), &quot;&lt;br/&gt;&quot;, &quot;all&quot;)&gt;</p>
<p>&lt;cfdocument format=&quot;pdf&quot; name=&quot;data&quot;&gt;
&lt;cfoutput&gt;
#newText#
&lt;/cfoutput&gt;
&lt;/cfdocument&gt;</p>
<p>&lt;cfheader name=&quot;Content-Disposition&quot; value=&quot;inline; filename=test.pdf&quot;&gt;
&lt;cfcontent type=&quot;application/pdf&quot; reset=&quot;true&quot; variable=&quot;#data#&quot;&gt;
</code></p>
}