<h1>Post</h1>

<p>This morning when I couldn't sleep (I'm sorry PST, but I'm a CST guy and always will be) I thought that it might be kind of fun to look into added sound effects to an Adobe AIR application. I've worked with sound before. I've got a sample application that lets you drag a MP3 file onto it and the code will then parse the ID3 info and find the lyrics for you. But I wanted to add something simpler to an application - like a button click sound. The code for playing a song versus a sound effect isn't really any different, but here is a simple example to give you an idea of how you can do it.</p>
<!--more-->
<p/>
<p>Since the code is short enough, I'll paste in the entire thing and then explain what I'm doing:</p>
<p/>
<code>
<p>&lt;html&gt;
&lt;head&gt;
&lt;title&gt;New Adobe AIR Project&lt;/title&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;lib/air/AIRAliases.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;lib/jquery/jquery-1.4.2.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
$(document).ready(function() {</p>
<pre><code>		//preload the sounds
		var snd1 = air.File.applicationDirectory.resolvePath(&quot;lib/sound/button-4.mp3&quot;);
		var btn1 = new air.Sound(new air.URLRequest(snd1.url));

		var snd2 = air.File.applicationDirectory.resolvePath(&quot;lib/sound/button-5.mp3&quot;);
		var btn2 = new air.Sound(new air.URLRequest(snd2.url));

		$(&quot;#btnTest&quot;).click(function() {
			btn1.play();			
		});

		$(&quot;#btn2Test&quot;).click(function() {
			btn2.play();			
		});

	});
	&amp;lt;/script&amp;gt;    
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;input type=&quot;button&quot; id=&quot;btnTest&quot; value=&quot;Test Sound&quot;&amp;gt;

&amp;lt;input type=&quot;button&quot; id=&quot;btn2Test&quot; value=&quot;Test Another Sound&quot;&amp;gt;

&amp;lt;/body&amp;gt;
</code></pre>
<p>&lt;/html&gt;
</code></p>
<p/>
<p>You can look at this code snippet as two distinct parts - the layout and the JavaScript code. The layout is pretty simple, two buttons. The code shows how MP3 files are loaded. (I should point out - you can only work with MP3 files.) You begin by simply creating a pointer to your file. In this case my files are stored relative to my application in a lib/sound folder.</p>
<p/>
<code>
var snd1 = air.File.applicationDirectory.resolvePath("lib/sound/button-4.mp3");
</code>
<p/>
<p>You then create a new Sound object. Sound objects take URLs, not paths, so we use the url property of the file object.</p>
<p/>
<code>
var btn1 = new air.Sound(new air.URLRequest(snd1.url));
</code>
<p/>
<p>The final part is to create a way to play the sound. I've done this with an event handler on my buttons:</p>
<p/>
<code>
$("#btnTest").click(function() {
	btn1.play();			
});
</code>
<p/>
<p>And that's it. I've packaged up the zip and a compiled AIR file and attached it to this blog entry. You can, of course, do a lot more complex things with sound in AIR. Check the <a href="http://help.adobe.com/en_US/air/html/dev/WS5b3ccc516d4fbf351e63e3d118676a5a2f-8000.html">Working with Sound</a> part of the docs for more info.</p>
<p/>
<p>p.s. Sound effects courtesy of <a href="http://www.soundjay.com">Soundjay.com</a>.<p><a href='enclosures/C%3A%5Chosts%5C2009%2Ecoldfusionjedi%2Ecom%5Cenclosures%2FSimpleSoundDemo%2Ezip'>Download attached file.</a></p></p>
}