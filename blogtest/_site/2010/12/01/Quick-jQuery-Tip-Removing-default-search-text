<h1>Post</h1>

<p>One of the common UI patterns is to add some default text to a search box, so for example, it may say &quot;Enter Search&quot; in the input field. As soon as the user clicks on the field that default text goes away. While there are probably a thousand ways of doing it, here is one quick and dirty way of doing it with jQuery.</p>
<!--more-->
<p/>
<p>First, ensure your search field has an ID and the default text you want.</p>
<p/>
<code>
&lt;input type="text" name="search" id="search" value="Search for Beer!"&gt;
</code>
<p/>
<p>Next, within your document.ready block, just tell jQuery to monitor the field for clicks:</p>
<p/>
<code>
$('#searchtext').click(function() {
});
</code>
<p/>
<p>As for the actual code - it is somewhat complex. You may want to move this into a separate file due to the size:</p>
<p/>
<code>
$('#searchtext').focus(function() {
	$(this).val("").unbind("focus");
});
</code>
<p/>
<p>Ok, sorry, I was being a bit of an ass. Basically the code says: Set the value to blank and stop listening for focus event. Nice, short, and sweet. Hope this helps.</p>
<p/>
<p>P.S. Of course, you could just use placeholder as well: &lt;input type=&quot;text&quot; name=&quot;search&quot; placeholder=&quot;Search for Beer!&quot;&gt;. This will be ignored by browsers that don't understand it and will act like the code above for browsers that do. This works in HTML/Adobe AIR applications as well.</p>
<p>P.S.S. I originally used the click even - but Dan mentioned how this wouldn't work with keyboard navigation. I changed to focus based on his recommendation.</p>
}