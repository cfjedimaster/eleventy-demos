<h1>Post</h1>

<p>Yesterday night I took at <a href="http://www.jqplot.com">jqPlot</a>, a jQuery plugin for charting. I'm a big fan of charting, especially ColdFusion's built-in charting, but I wanted to take a look at jqPlot more deeply ever since I played with it a bit within the <a href="http://cfam.riaforge.org">CFAM</a> project. For the most part, jqPlot works well (although I had a few issues I'll describe below), and if a JavaScript rendered chart solution is ok for you then you definitely want to take a look. Just remember that this is completely client side solution. You won't emailing these charts or embedding them in a presentation anytime soon.</p>
<!--more-->
<p/>
<p>I'd begin by taking a look at the jqPlot <a href="http://www.jqplot.com/tests/">examples</a>. These give a good idea of what the plugin is capable of. Then you want to download the bits, extract, and start playing. If you look at the <a href="http://www.jqplot.com/docs/files/usage-txt.html">usage</a> example, you can see that the plugin is rather simple to use. You include your jQuery, the plugin, and a CSS sheet. If you ever used jQuery UI then this should be very familiar to you. You then select a div (and note it is important that the div have a defined width and height) and then you create an instance of jqPlot within that div. The code makes it look deceptively simple:</p>
<p/>
<code>
$.jqplot('chartdiv',  [[[1, 2],[3,5.12],[5,13.1],[7,33.6],[9,85.9],[11,219.9]]]);
</code>
<p/>
However this never worked for me. The third argument to the constructor is an options object. Apparently this is optional but for me, nothing worked until I actually passed in an object, even a blank one. Here is a complete working example of the chart.
<p/>
<code>
&lt;html&gt;
<p>&lt;head&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;jqplot/jquery.jqplot.js&quot;&gt;&lt;/script&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;jqplot/jquery.jqplot.css&quot; /&gt;
&lt;script&gt;
$(document).ready(function() {</p>
<pre><code>$.jqplot('chartdiv',  [[[1, 2],[3,5.12],[5,13.1],[7,33.6],[9,85.9],[11,219.9]]], {});
</code></pre>
<p>})
&lt;/script&gt;</p>
<p>&lt;/head&gt;
&lt;body&gt;</p>
<p>&lt;h2&gt;Test jqPlot&lt;/h2&gt;</p>
<p>&lt;div id=&quot;chartdiv&quot; style=&quot;width:400px;height:400px&quot;&gt;&lt;/div&gt;</p>
<p>&lt;/body&gt;
&lt;/html&gt;
</code></p>
<p/>
<p>You can see an example of this here: <a href="http://www.raymondcamden.com/demos/dec172010/jqplot/test1.cfm">http://www.coldfusionjedi.com/demos/dec172010/jqplot/test1.cfm</a> The default rendering works but there are approximately one million or so ways to configure the chart.</p>
<p/>
<p>One critical thing you don't want to miss is the format of the data. This confused me at first because visually, [[[1, 2],[3,5.12],[5,13.1],[7,33.6],[9,85.9],[11,219.9]]], doesn't exactly scream out &quot;Readability.&quot; What that is, in English, is an array of series of points. So the top level array contains series inside it. A simple chart has one series. A series is made up of data points. So for the line graph 1,2 means x position 1, y position 2.</p>
<p/>
<p>So how about a ColdFusion example? I began by performing a simple query against the cfartgallery datasource.</p>
<p/>
<code>
&lt;cfquery name="getsales" datasource="cfartgallery"&gt;
select sum(total) as sales, month(orderdate) as month from orders
group by month(orderdate)
&lt;/cfquery&gt;
</code>
<p>
<p>I then needed to translate this query into the format jqPlot desires:</p>
<p>
<code>
&lt;!--- core data ---&gt;
&lt;cfset data = []&gt;
&lt;!--- one series ---&gt;
&lt;cfset data[1] = []&gt;
&lt;cfloop query="getsales"&gt;
	&lt;cfset arrayAppend(data[1], [month,sales])&gt;
&lt;/cfloop&gt;
&lt;cfset serializedData = serializeJSON(data)&gt;
&lt;cfset serializedData = replace(serializedData, """", "", "all")&gt;
</code>
<p>
<p>For the most part this should make sense. But why am I doing the replacement at the end? ColdFusion 901 wraps all the data in quotes. It's easy to remove them at once, but I bet jqPlot could just do parseInt on em and be fine. Anyway, I then output it like so:</p>
<p>
<code>
$(document).ready(function() {
	&lt;cfoutput&gt;
	$.jqplot('chartdiv',  #serializedData#, 
		{ 
			title:'Sales by Month',
			axes:{
				xaxis:{min:1, max:12,numberTicks:12,
					tickOptions:{formatString:'%s'}
				},
				yaxis:{min:0}
			}
		}
	);
	&lt;/cfoutput&gt;
})
</code>
<p>
<p>Note I've used a few options here. I added a title and specified the xaxis should go from 1 to 12. I also formatted the ticks. You can see an example of this here: <a href="http://www.coldfusionjedi.com/demos/dec172010/jqplot/test2a.cfm">http://www.coldfusionjedi.com/demos/dec172010/jqplot/test2a.cfm</a> It works, but how about using a bar chart? That's better for this type of data. Switching to a bar chart involves a bit more work. Here is the complete template. You can see two main changes. First - we include plugins to support the bar chart. Secondly we use a new renderer for the xaxis.</p>
<p>
<code>
&lt;cfquery name="getsales" datasource="cfartgallery"&gt;
select sum(total) as sales, month(orderdate) as month from orders
group by month(orderdate)
&lt;/cfquery&gt;
&lt;!--- core data ---&gt;
&lt;cfset data = []&gt;
&lt;!--- one series ---&gt;
&lt;cfset data[1] = []&gt;
&lt;cfloop query="getsales"&gt;
	&lt;cfset arrayAppend(data[1], sales)&gt;
&lt;/cfloop&gt;
&lt;cfset serializedData = serializeJSON(data)&gt;
&lt;cfset serializedData = replace(serializedData, """", "", "all")&gt;
<p>&lt;html&gt;</p>
<p>&lt;head&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;jqplot/jquery.jqplot.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;jqplot/plugins/jqplot.categoryAxisRenderer.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;jqplot/plugins/jqplot.barRenderer.js&quot;&gt;&lt;/script&gt;</p>
<p>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;jqplot/jquery.jqplot.css&quot; /&gt;
&lt;script&gt;
$(document).ready(function() {
&lt;cfoutput&gt;
$.jqplot('chartdiv',  #serializedData#,
{
title:'Sales by Month',
series:[ {renderer:$.jqplot.BarRenderer, rendererOptions:{barPadding: 0, barMargin: 3}} ],
axes:{
xaxis:{renderer:$.jqplot.CategoryAxisRenderer},
yaxis:{min:0}
}
}
);
&lt;/cfoutput&gt;
})
&lt;/script&gt;</p>
<p>&lt;/head&gt;
&lt;body&gt;</p>
<p>&lt;h2&gt;Test jqPlot&lt;/h2&gt;</p>
<p>&lt;div id=&quot;chartdiv&quot; style=&quot;width:400px;height:400px&quot;&gt;&lt;/div&gt;</p>
<p>&lt;/body&gt;
&lt;/html&gt;
</code></p>
<p>
<p>You can see this here: <a href="http://www.coldfusionjedi.com/demos/dec172010/jqplot/test2.cfm">http://www.coldfusionjedi.com/demos/dec172010/jqplot/test2.cfm</a>. Looking nicer, right? Not quite as simple, but I think once you get the chart to your liking, then your home free. So how about one more example? Imagine for a moment that our chart is a bit overwhelming for the sales staff. They can't quite handle seeing 12 bars at once. It overwhelms them and confuses them. How about we give them a nice way to control how much data is shown at once? In my final example, I've added the jQuery Slider control. I'm using the option with 2 controls so that you can specify an exact portion of the year. Here is the code. Notice how I look for changes to the slider and then fire off XHR requests to get my data.</p>
<p>
<code>
<p>&lt;html&gt;</p>
<p>&lt;head&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;jqueryui/jquery-ui-1.8.7.custom.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;jqplot/jquery.jqplot.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;jqplot/plugins/jqplot.categoryAxisRenderer.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;jqplot/plugins/jqplot.barRenderer.js&quot;&gt;&lt;/script&gt;</p>
<p>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;jqplot/jquery.jqplot.css&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;jqueryui/css/ui-lightness/jquery-ui-1.8.7.custom.css&quot; /&gt;
&lt;script&gt;
function getData() {
var min = $(&quot;#monthbegin&quot;).text();
var max = $(&quot;#monthend&quot;).text();</p>
<pre><code>$.post(&quot;data.cfc?method=getdata&amp;returnformat=json&quot;, {&quot;minmonth&quot;:min,&quot;maxmonth&quot;:max}, function(res,code) {
	//remove the quotes
	res = res.replace(/&quot;/g,&quot;&quot;);
	//create the proper data
	var data = [];
	data[0] = eval(res);

	var options = { 
		title:'Sales by Month',
		series:[ {renderer:$.jqplot.BarRenderer, rendererOptions:{barPadding: 0, barMargin: 3}} ],
		axes:{
    		xaxis:{renderer:$.jqplot.CategoryAxisRenderer}, 
	        yaxis:{min:0}
	    }
	};
	$(&quot;#chartdiv&quot;).html(&quot;&quot;);
	$.jqplot('chartdiv',  data, options);

});
</code></pre>
<p>}</p>
<p>$(document).ready(function() {</p>
<pre><code>getData();

$( &quot;#slider-range&quot; ).slider({
		range: true,
		min: 1,
		max: 12,
		values: [ 1, 12 ],
		slide: function( event, ui ) {
			$(&quot;#monthbegin&quot;).text(ui.values[0]);
			$(&quot;#monthend&quot;).text(ui.values[1]);
			getData();
		}
});
</code></pre>
<p>})
&lt;/script&gt;</p>
<p>&lt;/head&gt;
&lt;body&gt;</p>
<p>&lt;h2&gt;Test jqPlot&lt;/h2&gt;</p>
<p>&lt;b&gt;Show data from month &lt;span id=&quot;monthbegin&quot;&gt;1&lt;/span&gt; to &lt;span id=&quot;monthend&quot;&gt;12&lt;/span&gt;&lt;/b&gt;</p>
<p>&lt;div id=&quot;slider-range&quot; style=&quot;width:400px&quot;&gt;&lt;/div&gt;</p>
<p>&lt;div id=&quot;chartdiv&quot; style=&quot;width:400px;height:400px&quot;&gt;&lt;/div&gt;</p>
<p>&lt;/body&gt;
&lt;/html&gt;
</code></p>
<p>
<p>The CFC behind the scenes really isn't relevant, but here it is if you want to see it:</p>
<p>
<code>
component {
<pre><code>remote array function getdata(numeric minmonth=1, numeric maxmonth=12) {
	
	var q = new com.adobe.coldfusion.query();
    q.setDatasource(&quot;cfartgallery&quot;);
    q.setSQL(&quot;select sum(total) as sales, month(orderdate) as month from orders where month(orderdate) &amp;gt;= :min and month(orderdate) &amp;lt;= :max group by month(orderdate)&quot;);
    q.addParam(name=&quot;min&quot;,value=&quot;#arguments.minmonth#&quot;,cfsqltype=&quot;cf_sql_integer&quot;);
    q.addParam(name=&quot;max&quot;,value=&quot;#arguments.maxmonth#&quot;,cfsqltype=&quot;cf_sql_integer&quot;);
    var results = q.execute().getResult();
    var result = [];
    for(var i=1; i&amp;lt;= results.recordCount; i++) {
    	arrayAppend(result, [results.month[i], results.sales[i]]);	
    }
    return result;
}
</code></pre>
<p>}
</code></p>
<p>
<p>And finally, you can play with this demo by clicking the big ass demo button below:</p>
<p>
<p><a href="http://www.coldfusionjedi.com/demos/dec172010/jqplot/test3a.cfm"><img src="https://static.raymondcamden.com/images/cfjedi/icon_128.png" title="Demo, Baby" border="0"></a></p>
<p>
<p>p.s. Quick final note folks. When I posted my demos, I forgot to include the IE fix. jqPlots DOES support IE. Just be sure to add this one line:</p>
<p>
<code>
&lt;!--[if IE]&gt;&lt;script language="javascript" type="text/javascript" src="jqplot/excanvas.js"&gt;&lt;/script&gt;&lt;![endif]--&gt;
</code>}