<h1>Post</h1>

<p>Here's something I knew wouldn't be a problem but I wanted to confirm. As you know, an HTML page cannot make an Ajax request to a remote server. There are ways around this (a proxy on your server or JSONP), but for the most part, it's a hard and fast rule. But what about for Android apps? Specifically - what if i use Phonegap and jQuery Mobile to build a &quot;real&quot; native application, will the same restrictions hold true? As I expected - they do not - and that's awesome news for folks wanting to make use of remote services. Here is a trivial example I built using Dreamweaver CS 5.5.</p>
<!--more-->
<p/>
<p>First - my HTML page.</p>
<p/>
<code>
&lt;!DOCTYPE html&gt; 
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;jQuery Mobile Web App&lt;/title&gt;
&lt;link href="jquery-mobile/jquery.mobile-1.0a3.min.css" rel="stylesheet" type="text/css"/&gt;
&lt;script src="jquery-mobile/jquery-1.5.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="jquery-mobile/jquery.mobile-1.0a3.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;!-- This reference to phonegap.js will allow for code hints as long as the current site has been configured as a mobile application. 
	 To configure the site as a mobile application, go to Site -&gt; Mobile Applications -&gt; Configure Application Framework... --&gt;
&lt;script src="phonegap.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script&gt;
$(document).ready(function() {
<pre><code>$(&quot;#testLink&quot;).click(function(e) {
	e.preventDefault();
	$(&quot;#resultBlock&quot;).html(&quot;Getting the funk - stand by...&quot;);	
	$.get(&quot;http://www.raymondcamden.com/demos/may62011/ray.cfc?method=hellofromray&amp;returnFormat=plain&quot;, {}, function(data) {
		$(&quot;#resultBlock&quot;).html(data);
	})
});
</code></pre>
<p>});
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;</p>
<p>&lt;div data-role=&quot;page&quot; id=&quot;page&quot;&gt;
&lt;div data-role=&quot;header&quot;&gt;
&lt;h1&gt;Page One&lt;/h1&gt;
&lt;/div&gt;
&lt;div data-role=&quot;content&quot;&gt;	
&lt;a id=&quot;testLink&quot; rel=&quot;external&quot;&gt;Bring the Funk&lt;/a&gt;
&lt;div data-role=&quot;collapsible&quot;&gt;
&lt;h3&gt;Result from Ray&lt;/h3&gt;
&lt;p id=&quot;resultBlock&quot;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-role=&quot;footer&quot;&gt;
&lt;h4&gt;Page Footer&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;</p>
<p>&lt;/body&gt;
&lt;/html&gt;
</code></p>
<p/>
<p>Most of this is pretty vanilla HTML but make note of the content with the DIV block. I've got a link with an ID and then right below it a collapsible block. This is one of the jQuery Mobile UI widgets you can employ. Now go back to the top.</p>
<p/>
<p>I've told jQuery to listen for click events on my link. When clicked, I set a quick status message and then fire off my request to a remote ColdFusion server. In this case it's just returning a string but obviously I could request JSON as well. I take the result and drop it in my collapsible div. The CFC returns a random number so I can test multiple clicks just to be sure.</p>
<p/>
<p>And that's it. For those of you with Droid devices, I've attached the APK generated by the Dreamweaver/Phonegap relationship I'm officially calling Uber Awesome. Remember - if you have a device that doesn't allow for ad hoc installs - like my own HTC Inspire, you can download the APK to your machine and do a manual install. It's as easy as: adb install filename.apk (assuming your device is connected via USB of course).<p><a href='enclosures/C%3A%5Chosts%5C2009%2Ecoldfusionjedi%2Ecom%5Cenclosures%2Fjqm1%2Ddebug%2Eapk'>Download attached file.</a></p></p>
}