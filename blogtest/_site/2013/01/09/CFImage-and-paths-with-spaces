<h1>Post</h1>

<p>A reader ran into an interesting issue:</p>
<blockquote>
I was working with CFIMAGE tag. Lets say<br/><br/>
<p>&lt;cfset VARIABLES.myImage=&quot;http://somesite.com/imageFolder/image.jpg&quot;&gt;<br/>
&lt;cfimage source=&quot;#VARIABLES.myImage#&quot; name=&quot;VARIABLES.isLargeImage&quot;&gt;<br/><br/></p>
<p>This works perfect, but when I have space in my image path like
&lt;cfset VARIABLES.myImage=&quot;http://somesite.com/image Folder/image.jpg&quot;&gt;
It throws error. My path comes dynamically from DB in actual code.
I also tried urlEncodedFormat on my path but that did not worked too.
I think CF running on window server should be able enough to resolve paths which have spaces in its folder/file names.</p>
</blockquote>
<!--more-->
To show you an example of what he said, I dropped an image with a space in it into a folder and then tried to cfimage it as he did:
<script src="https://gist.github.com/4493627.js"></script>
<p>When run, you get an error:</p>
<img src="https://static.raymondcamden.com/images/screenshot50.png" />
<p>Interestingly enough, the browser has no issue with this. I've noticed this for years now - browsers (well at least Chrome) simply automatically escape the spaces for you.</p>
<p>If you try to fix it with URLEncodedFormat, it still fails. It is rather easy to see why if you output the result of the URL:</p>
<p>http%3A%2F%2F127%2E0%2E0%2E1%2Ftestingzone%2Fcats%20star%20wars%2Ejpg</p>
<p>So to fix it, we need to urlEncode the file name. To do this we need to break apart the URL. There are <b>multiple</b> ways of doing this, but for simplicity sake, I used the <a href="http://www.cflib.org/udf/parseUrl">parseURL</a> UDF from CFLib.org. It uses string functions to break apart a URL into its components. As an example, this code...</p>
<script src="https://gist.github.com/4493679.js"></script>
<p>Returns these values:</p>
<img src="https://static.raymondcamden.com/images/screenshot51.png" />
<p>Based on what I saw here, I thought this might be a nice way to rebuild the URL. I would not call this code 100% safe as it wouldn't pick up the username and password if they existed, but I wanted something simple.</p>
<script src="https://gist.github.com/4493697.js"></script>
<p>And the result...</p>
<img src="https://static.raymondcamden.com/images/screenshot52.png" />
<p>I hope this is helpful!</p>
}