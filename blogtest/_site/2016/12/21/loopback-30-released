<h1>Post</h1>

<p>Christmas arrived early for <a href="http://loopback.io/">LoopBack</a> developers - today LoopBack 3.0 was released. To update, go into terminal and run the following:</p>
<pre><code>npm install -g strongloop
</code></pre>
<p>Then create a new application. Notice that 3.x is now marked as current, but isn't the default. I'm filing a bug report for that now.</p>
<p><img src="https://static.raymondcamden.com/images/2016/12/lb31.png" alt="Screen shot"></p>
<p>So what changed? You can read a complete list of release notes here: <a href="http://loopback.io/doc/en/lb3/3.0-Release-Notes.html">3.0 Release Notes</a></p>
<p>Note that as of <em>right now</em>, the notes say 3.0 is still in pre-release, this should be removed really soon.</p>
<p>To me, two changes stand out as particularly important. The first is <a href="http://loopback.io/doc/en/lb3/3.0-Release-Notes.html#cleanup-in-conversion-and-coercion-of-input-arguments">&quot;Cleanup in conversion and coercion of input arguments&quot;</a> and the second is <a href="http://loopback.io/doc/en/lb3/3.0-Release-Notes.html#cors-is-no-longer-enabled">&quot;CORS is no longer enabled&quot;</a>. Both of these changes help lock down and secure LoopBack APIs a bit more and feel like really smart ideas.</p>
<p>Another change I like revolve around <a href="http://loopback.io/doc/en/lb3/3.0-Release-Notes.html#settings-strict-validate-and-strict-throw-were-removed">strict mode</a>. I just discovered recently that by default, you can pass additional properties to a model and LoopBack will accept them. By using strict:true, you can disable this. The change in 3.0 (I liked to it at the beginning of the paragraph) just simplifies the new behavior.</p>
<p>And finally - a new CLI focused <em>just</em> on LoopBack is in the works. I'll post more when it gets closer to release!</p>
}