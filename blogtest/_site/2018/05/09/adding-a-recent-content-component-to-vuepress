<h1>Post</h1>

<p>A few weeks back a new static site generator was launched, <a href="https://vuepress.vuejs.org/">VuePress</a>. Being based on Vue.js, I was immediately interested in it. I've only been using it for a few hours, mainly prototyping it for something I'd like to build at <a href="https://goextend.io">work</a>, but I thought I'd share a little code snippet I wrote. You should assume this is probably the wrong way to do it. As I said, I'm pretty new to VuePress, but when I get something working I like to share it.</p>
<p>Imagine your building a blog, or a cookbook, and you want to show the latest content on your home page, or perhaps in side navigation. How would you do that?</p>
<p>Well first off, VuePress provides access to the entire site via a - wait for it - <code>$site</code> variable. So in theory, you could do this:</p>
<pre><code class="language-html">### Recent Cool Crap

&lt;ul&gt;
&lt;li v-for=&quot;page in $site.pages&quot;&gt;{{ page.title }}&lt;/li&gt;
&lt;/ul&gt;
</code></pre>
<p>That works, but breaks down when you need to add sorting and filtering. So for example, in a blog you probably only want the latest blog entries. You don't want to include the home page or contact page. In theory you could get crazy in your <code>v-for</code> there but why make your layout messy when a component will do instead?</p>
<p>VuePress supports <a href="https://vuepress.vuejs.org/guide/using-vue.html#using-components">custom global components</a> by simply dropping a file in the <code>.vuepress/components</code> folder. In my testing it appeared as if I needed to restart the server in order to get VuePress to recognize it, but it could have been another issue. For me, I created a file called <code>RecentArticles.vue</code>. This then let me drop this into the home page:</p>
<pre><code class="language-html">## Recent Additions

&lt;RecentArticles/&gt;
</code></pre>
<p>Now let's look at the component.</p>
<pre><code class="language-html">&lt;template&gt;
&lt;div&gt;
	&lt;ul&gt;
		&lt;li v-for=&quot;post in recentFiles&quot;&gt;
			&lt;a :href=&quot;post.path&quot;&gt;{{post.title}}&lt;/a&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
&lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
	data() {
		return {};
	}, 
	computed:{
		recentFiles() {
			let files = this.$site.pages.filter(p =&gt; {
				return p.path.indexOf('/posts/') &gt;= 0;
			}).sort((a,b) =&gt; {
				let aDate = new Date(a.frontmatter.published).getTime();
				let bDate = new Date(b.frontmatter.published).getTime();
				let diff = aDate - bDate;
				if(diff &lt; 0) return -1;
				if(diff &gt; 0) return 1;
				return 0;
			}).slice(0,5);

			return files;
		}
	}
}
&lt;/script&gt;
</code></pre>
<p>The top portion simply handles the display, which in my case is a basic unordered list. The crucial bits is the computed property, <code>recentFiles</code>. In order for this to work, I have to make a few assumptions.</p>
<p>First - I assume all of the blog entries are in a path called <code>posts</code>. VuePress returns the location of each page via the <code>path</code> property. I check for <code>/posts/</code> in the path as a way of saying that this particular file is a post. You also get access to the frontmatter of each file and you could use a marker there too if you want.</p>
<p>Second - I then a sort. I'm assuming each post will have a <code>published</code> value in the front matter. (And I'm very happy that VuePress lets me use JSON for frontmatter and not just YAML.) I parse the published value and then sort.</p>
<p>Finally - I return the top five. In theory I could make that an argument passed to the component and default it to 5. In fact, I'm pretty sure I'll do that. Heck, I may even be able to repurpose this to work for an RSS feed as well. (Someone wrote up a great article on how to build UI-less components but I'm having trouble finding that link. If I do, I'll post it as a comment below.)</p>
<p>Anyway, I hope this is helpful. If I play more with VuePress I'll share more tips!</p>
<p><i>Header photo by <a href="https://unsplash.com/photos/jIU6rQccJAU?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Pineapple Supply Co</a> on Unsplash</i></p>
}